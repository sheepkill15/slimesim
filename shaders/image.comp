#version 430
layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;
layout(rgba32f, binding = 0) uniform image2D img_output;

layout(std140, binding = 2) uniform WindowSize {
    uint width;
    uint height;
};

layout(std140, binding = 3) uniform ImageSettings {
    float diffuseRate;
    float evaporationRate;
};

uniform double deltaTime;

void main()
{
    ivec2 coords = ivec2(gl_GlobalInvocationID.xy);
    if(coords.x >= width || coords.y >= height) return;
    vec4 pixel = imageLoad(img_output, coords);
    vec4 newPixel = vec4(0);

    for(int offsetX = -1; offsetX <= 1; offsetX ++) {
        for(int offsetY = -1; offsetY <= 1; offsetY ++) {
            uint sampleX = min(width-1, max(0, coords.x + offsetX));
            uint sampleY = min(height-1, max(0, coords.y + offsetY));
            newPixel += imageLoad(img_output, ivec2(sampleX, sampleY));
        }
    }

    newPixel /= 9;

    float diffuseWeight = float(clamp(diffuseRate * deltaTime, 0.0, 1.0));

    pixel = pixel * (1 - diffuseWeight) + newPixel * diffuseWeight;

    pixel -= vec4(evaporationRate * deltaTime);
    pixel = max(vec4(0), pixel);

    imageStore(img_output, coords, pixel);
}
